#!/usr/bin/env bash

# Bash strict mode (https://github.com/alphabetum/bash-boilerplate)
set -eEuo pipefail
trap 'echo "Aborting (errexit line $LINENO). Exit code: $?" >&2' ERR
IFS=$'\n\t'

_file="$1"/status.toml

# Remove the existing i3status-rust configuration
[ -e "$_file" ] && rm "$_file" -rf

# Start with the beginning of a new bar
{
	cat <<- EOF
	[icons]
	name = "awesome"
	[icons.overrides]
	cpu = "  "
	memory_mem = "  "

	[theme]
	name = "plain"
	[theme.overrides]
	idle_bg = "#1a1a1a"
	idle_fg = "#e6e6e6"
	info_bg = "#1a1a1a"
	info_fg = "#e6e6e6"
	good_bg = "#1a1a1a"
	good_fg = "#35b181"
	warning_bg = "#1a1a1a"
	warning_fg = "#e64d00"
	critical_bg = "#1a1a1a"
	critical_fg = "#c22436"
	separator = ""
	separator_bg = "auto"
	separator_fg = "auto"
	alternating_tint_bg = "#1a1a1a"

	[[block]]
	block = "focused_window"
	EOF
} >> "$_file"

# Add network blocks for each interface
# for i in /sys/class/net/*; do
# 	_iface="${i##*/}"
# 	_wifi='false'
# 	[[ "$_iface" =~ ^wlp ]] && _wifi='true'
# 	if [ "$_iface" != 'lo' ]; then
# 		{
# 			cat <<-EOF
#
# 			[[block]]
# 			block = "net"
# 			device = "$_iface"
# 			ip = true
# 			ssid = $_wifi
# 			speed_up = false
# 			speed_down = false
# 			EOF
# 		} >> "$_file"
# 	fi
# done

# Add some more basics
{
	cat <<- 'EOF'
	
	[[block]]
	block = "custom"
	cycle = ["echo  $(hostname -i)", "echo  $(nmcli -t connection show --active | grep wireless | cut -f1 -d':' | xargs)", "echo  $(uname -n)", "echo  $(uname -r)", "echo  $(whoami)", "echo  $(checkupdates | wc -l)"]
	interval = 60

	[[block]]
	block = "cpu"

	[[block]]
	block = "temperature"

	[[block]]
	block = "memory"
	display_type = "memory"
	format_mem = "{MFg}GB"
	format_swap = "{SFg}GB"
	EOF
} >> "$_file"

# Add all mounted drives to the configuration
for i in $(mount | grep -e vfat -e ext4 | cut -f3 -d' '); do
	{
		cat <<- EOF

		[[block]]
		block = "disk_space"
		path = "$i"
		alias = "$i"
		EOF
	} >> "$_file"
done

# If there are batteries, add the battery block(s)
if [ "$(ls -A /sys/class/power_supply)" ]; then
	for i in /sys/class/power_supply/*; do
		if [[ ! "$i" =~ AC$ ]]; then
			{
				cat <<- EOF

				[[block]]
				block = "battery"
				device = "${i##*/}"
				EOF
			} >> "$_file"
		fi
	done
fi

# If there are backlights available, add them
if [ "$(ls -A /sys/class/backlight)" ]; then 
	for i in /sys/class/backlight/*; do
		{
			cat <<- EOF

			[[block]]
			block = "backlight"
			device = "${i##*/}"
			EOF
		} >> "$_file"
	done
fi

# Add the ending of the bar
{
	cat <<- 'EOF'

	[[block]]
	block = "sound"

	[[block]]
	block = "time"
	interval = 1
	format = "%a %Y.%m.%d %T"

	[[block]]
	block = "custom"
	interval = 1
	command = "echo  $(~/dotfiles/bin/lockleds)"
	EOF
} >> "$_file"
