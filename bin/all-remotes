#!/usr/bin/env bash

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at http://mozilla.org/MPL/2.0/.

# Bash strict mode (https://github.com/alphabetum/bash-boilerplate)
set -eEuo pipefail
trap 'echo "Aborting (errexit line $LINENO). Exit code: $?" >&2' ERR

usage() {
	printf 'Usage: %s <default_remote_url>\n' "$(basename "$0")" >&2
	printf ' -h --help : display this message\n' >&2
	exit
}

main() {
	# Fail if this is not a git repo
	if ! git status >/dev/null 2>&1; then
		printf 'ERROR: This is not a git repository.\n' >&2

	else

		# Find the repo name
		local _repo
		_repo="$(pwd)"
		_repo="${_repo##*/}"

		# Reset the origin for both push and fetch
		git remote -v | grep -q 'origin' && git remote rm origin
		git remote add origin "$1/$_repo"

		# Prefix aur repos
		if [ "$1" == "$AUR" ]; then
			_repo="aur-$_repo"
		fi

		# Add the remaining push repos
		for i in $GITS; do
			[ "$1" != "$i" ] && git remote set-url --add origin "$i/$_repo"
		done

		# Show the result
		git remote -v
	fi
}

_pos_args=()
while [ "$#" -gt 0 ]; do
	case "$1" in
		'--help'|'-h') usage;;
		*) _pos_args+=("$1"); shift;;
	esac
done
main "${_pos_args[@]}"
