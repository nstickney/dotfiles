#!/bin/sh

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at http://mozilla.org/MPL/2.0/.

# Bash strict mode (https://github.com/alphabetum/bash-boilerplate)
set -eu

usage() {
	printf 'Usage: %s [-sh] [projects_dir]\n' "$(basename "$0")" >&2
	printf ' projects_dir    : optional path to projects directory\n' >&2
	# shellcheck disable=2016
	printf '                   (defaults to $HOME/projects)\n' >&2
	printf ' -s --submodules : recursively update all submodules\n' >&2
	printf ' -h --help       : display this message\n' >&2
	exit
}

_submodules='false'
update_project() {
	git stash
	git pull origin "$(git rev-parse --abbrev-ref HEAD)"
	[ "$_submodules" = 'true' ] &&
		git submodule foreach 'git checkout master && git pull'
}

_projects_dir="$HOME"/projects
main() {
	bold=""
	norm=""
	if [ -t 1 ]; then
		bold="$(tput bold)"
		norm="$(tput sgr0)"
	fi
	if [ ! -d "$_projects_dir" ]; then
		printf '%s%s: Directory not found%s\n' \
			"$bold" "$_projects_dir" "$norm" >&2
		exit
	fi
	working_dir="$(pwd)"
	for i in "$_projects_dir"/*/; do
		cd "$working_dir" || exit
		cd "$i" || exit
		printf '%s%s%s\n' "$bold" "$(pwd)" "$norm"
		if [ -d '.git' ]; then
			update_project 2>&1 | sed 's/^/  /g'
		else
			printf '  -> Not a git repository\n'
		fi
	done
}

while [ "$#" -gt 0 ]; do
	case "$1" in
	'--help' | '-h')
		usage
		shift
		;;
	'--submodules' | '-s')
		_submodules='true'
		shift
		;;
	*)
		_projects_dir="$1"
		shift
		break
		;;
	esac
done
[ "$#" -gt 0 ] && usage
main "$@"
