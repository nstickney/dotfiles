#!/usr/bin/env bash

# Bash strict mode (https://github.com/alphabetum/bash-boilerplate)
set -eEuo pipefail
trap 'echo "Aborting (errexit line $LINENO). Exit code: $?" >&2' ERR

usage() {
	printf 'Usage: %s\n' "$(basename "$0")" >&2
	printf ' -h --help : display this message\n' >&2
	exit
}

backup_or_remove() {
	if [ -L "$1" ]; then
		rm "$1"
	elif [ -e "$1" ]; then
		if [ -e "$1".backup ]; then
			rm -rf "$1".backup
		fi
		mv "$1" "$1".backup
	fi
}

link_configs() {
	printf '  %s (%s)...\n' "$1" "$2"
	local _file="$HOME/$2"              # All config files are in $HOME
	backup_or_remove "$_file"           # Save old files/directories (once)
	mkdir -p "${_file%/*}"              # Ensure parent directory exists
	_file="${_file##*/.}"               # Find dotfile name
	ln -s "$HOME/$3/${_file##*/}" "$HOME/$2"
}

user_confirm() {
	while true; do
		read -r -p "$1 [y/N]: " -n 1 yn
		printf '\n'
		case $yn in
			[Yy]* ) eval "$2"; break;;
			[Nn]* ) break;;
			"" ) break;;
		esac
	done
}

main() {
	declare -A confs # Match software to its config file/dir location within $HOME
	confs['aconfmgr']='.config/aconfmgr'
	confs['alacritty']='.config/alacritty'
	confs['aurman']='.config/aurman'
	confs['bash']='.bashrc'
	confs['gdb']='.gdbinit'
	confs['git']='.gitconfig'
	confs['sway']='.config/sway'
	confs['swaylock']='.config/swaylock'
	confs['tmux']='.tmux.conf'
	confs['vim']='.vim'

	printf 'Initializing and updating submodules...\n'
	git submodule update --init --jobs 8 --recursive --remote
	printf 'Linking configuration files/directories for...\n'

	link_configs 'shell profile' '.profile' 'dotfiles'

	for i in "${!confs[@]}"; do
		[ -x "$(command -v "$i")" ] && link_configs "$i" "${confs[$i]}" 'dotfiles'
	done
	[ -x "$(command -v xrdb)" ] && xrdb "$HOME/.Xresources"
	printf '    ...Complete!\n'

	if [ -x "$(command -v sudo)" ]; then
		if [ -x "$(command -v iptables)" ]; then
			user_confirm 'Install iptables configuration?' \
				"$HOME/dotfiles/bin/iptables-init";
		fi
		if [ -x "$(command -v nft)" ]; then
			user_confirm 'Install nftables configuration?' \
				"$HOME/dotfiles/bin/nftables-init";
		fi
	fi
}

_pos_args=()
while [ "$#" -gt 0 ]; do
	case "$1" in
		'--help'|'-h') usage;;
		*) _pos_args+=("$1"); shift;;
	esac
done
main "${_pos_args[@]}"
