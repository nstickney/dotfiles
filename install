#!/usr/bin/env bash

# Bash strict mode (https://github.com/alphabetum/bash-boilerplate)
set -eEuo pipefail
trap 'echo "Aborting (errexit line $LINENO). Exit code: $?" >&2' ERR
IFS=$'\n\t'

backup_or_remove() {
	if [ -L "$1" ]; then
		rm "$1"
	elif [ -e "$1" ]; then
		if [ -e "$1".old ]; then
			rm -rf "$1".old
		fi
		mv "$1" "$1".old
	fi
	}

ensure_dir_exists() {
	if [ ! -d "$1" ]; then
		mkdir -p "$1"
	fi
}

declare -A programs
programs['aconfmgr']="$HOME"/.config/aconfmgr
programs['alacritty']="$HOME"/.config/alacritty
programs['gdb']="$HOME"/.gdbinit
programs['git']="$HOME"/.gitconfig
programs['i3']="$HOME"/.i3
programs['tmux']="$HOME"/.tmux.conf
programs['vim']="$HOME"/.vim

printf '%s\n' "Initializing and updating submodules..."
git submodule update --init --jobs 8 --recursive --remote
printf '%s\n' "Linking configuration files/directories for..."

for i in "${!programs[@]}"; do
	if [ -x "$(command -v "$i")" ]; then
		printf '  %s...\n' "$i"
		_dir="${programs[$i]}"
		_dir="${_dir%/*}"
		ensure_dir_exists "$_dir"
		backup_or_remove "${programs[$i]}"
		ln -s "$HOME"/dotfiles/"$i" "${programs[$i]}"
	fi
done

if [ -x "$(command -v bash)" ]; then
	printf '  bash (and readline)...\n'
	backup_or_remove "$HOME"/.bashrc
	ln -s "$HOME"/dotfiles/bashrc "$HOME"/.bashrc
	# shellcheck disable=1090
	source "$HOME"/.bashrc
	backup_or_remove "$HOME"/.bash_profile
	ln -s "$HOME"/dotfiles/bash_profile "$HOME"/.bash_profile
	backup_or_remove "$HOME"/.inputrc
	ln -s "$HOME"/dotfiles/inputrc "$HOME"/.inputrc
fi

if [ -x "$(command -v rofi)" ] || [ -x "$(command -v urxvt)" ]; then
	printf '  X.org...\n'
	backup_or_remove "$HOME"/.Xresources
	ln -s "$HOME"/dotfiles/Xresources "$HOME"/.Xresources
	[ -x "$(command -v xrdb)" ] && xrdb "$HOME"/.Xresources
fi
printf '    ...Complete!\n'

if [ -x "$(command -v sudo)" ]; then
	if [ -x "$(command -v iptables)" ]; then
		while true; do
			read -r -p 'Install iptables configuration? [y/N]: ' -n 1 yn
			printf '\n'
			case $yn in
				[Yy]* ) "$HOME"/dotfiles/bin/iptables-init; break;;
				[Nn]* ) break;;
				"" ) break;;
			esac
		done
	fi
	if [ -x "$(command -v nft)" ]; then
		while true; do
			read -r -p 'Install nftables configuration? [y/N]: ' -n 1 yn
			printf '\n'
			case $yn in
				[Yy]* ) "$HOME"/dotfiles/bin/nftables-init; break;;
				[Nn]* ) break;;
				"" ) break;;
			esac
		done
	fi
fi
